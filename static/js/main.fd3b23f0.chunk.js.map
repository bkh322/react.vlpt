{"version":3,"sources":["components/CreateUser.js","components/userList.js","App.js","reportWebVitals.js","index.js"],"names":["CreateUser","username","email","onChange","onCreate","name","placeholder","value","onClick","User","user","UserList","users","map","id","App","useState","inputs","setInputs","setUsers","nextId","useRef","e","target","current","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAsBeA,MApBf,YAA8D,IAAxCC,EAAuC,EAAvCA,SAAUC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC/C,OACE,gCACE,uBACEC,KAAK,WACLC,YAAY,qBACZH,SAAUA,EACVI,MAAON,IAET,uBACEI,KAAK,QACLC,YAAY,qBACZH,SAAUA,EACVI,MAAOL,IAET,wBAAQM,QAASJ,EAAjB,8BCfN,SAASK,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACd,OACE,gCACE,4BAAIA,EAAKT,WADX,IACyB,qCAAQS,EAAKR,MAAb,UAedS,MAVf,YAA8B,IAAVC,EAAS,EAATA,MAClB,OACE,8BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,cAACD,EAAD,CAAMC,KAAMA,GAAWA,EAAKI,UCkDrBC,MA3Df,WAAgB,IAAD,EACeC,mBAAS,CACnCf,SAAU,GACVC,MAAO,KAHI,mBACNe,EADM,KACEC,EADF,KAKLjB,EAAoBgB,EAApBhB,SAAUC,EAAUe,EAAVf,MALL,EAaac,mBAAS,CACjC,CACEF,GAAI,EACJb,SAAU,WACVC,MAAO,6BAET,CACEY,GAAI,EACJb,SAAU,SACVC,MAAO,sBAET,CACEY,GAAI,EACJb,SAAU,MACVC,MAAO,qBA3BE,mBAaNU,EAbM,KAaCO,EAbD,KA+BPC,EAASC,iBAAO,GAetB,OACE,qCACE,cAAC,EAAD,CACEpB,SAAUA,EACVC,MAAOA,EACPC,SA7CW,SAAAmB,GAAM,IAAD,EACIA,EAAEC,OAAlBlB,EADY,EACZA,KAAME,EADM,EACNA,MACdW,EAAU,2BACLD,GADI,kBAENZ,EAAOE,MA0CNH,SApBW,WACf,IAAMM,EAAO,CACXI,GAAIM,EAAOI,QACXvB,WACAC,SAEFiB,EAAS,GAAD,mBAAKP,GAAL,CAAYF,KAEpBQ,EAAU,CACRjB,SAAU,GACVC,MAAO,KAETkB,EAAOI,SAAW,KAUhB,cAAC,EAAD,CAAUZ,MAAOA,QC/CRa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fd3b23f0.chunk.js","sourcesContent":["import React from 'react';\n\nfunction CreateUser({ username, email, onChange, onCreate }) {\n  return (\n    <div>\n      <input\n        name=\"username\"\n        placeholder=\"계정명\"\n        onChange={onChange}\n        value={username}\n      />\n      <input\n        name=\"email\"\n        placeholder=\"이메일\"\n        onChange={onChange}\n        value={email}\n      />\n      <button onClick={onCreate}>등록</button>\n    </div>\n  );\n}\n\nexport default CreateUser;","import React from 'react';\n\nfunction User({ user }) {\n  return (\n    <div>\n      <b>{user.username}</b> <span>({user.email})</span>\n    </div>\n  );\n}\n\nfunction UserList({ users }) {\n  return (\n    <div>\n      {users.map(user => (\n        <User user={user} key={user.id} />\n      ))}\n    </div>\n  );\n}\n\nexport default UserList;","import React, { useRef, useState } from 'react';\nimport CreateUser from './components/CreateUser'\nimport UserList from './components/userList'\n\n\nfunction App() {\n  const [inputs, setInputs] = useState({\n    username: '',\n    email: ''\n  });\n  const { username, email } = inputs;\n  const onChange = e => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value\n    });\n  };\n  const [users, setUsers] = useState([\n    {\n      id: 1,\n      username: 'velopert',\n      email: 'public.velopert@gmail.com'\n    },\n    {\n      id: 2,\n      username: 'tester',\n      email: 'tester@example.com'\n    },\n    {\n      id: 3,\n      username: 'liz',\n      email: 'liz@example.com'\n    }\n  ]);\n\n  const nextId = useRef(4);\n  const onCreate = () => {\n    const user = {\n      id: nextId.current,\n      username,\n      email\n    };\n    setUsers([...users, user]);\n\n    setInputs({\n      username: '',\n      email: ''\n    });\n    nextId.current += 1;\n  };\n  return (\n    <>\n      <CreateUser\n        username={username}\n        email={email}\n        onChange={onChange}\n        onCreate={onCreate}\n      />\n      <UserList users={users} />\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}